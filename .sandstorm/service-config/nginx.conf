worker_processes 4;
pid /var/run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {
	# Basic Settings
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_names_hash_bucket_size 64;
	server_tokens off;
	server_name_in_redirect off;

	include mime.types;
	default_type application/octet-stream;

	# Logging
	access_log off;
	error_log stderr;

	# Prevent nginx from adding compression; this interacts badly with Sandstorm
	# WebSession due to https://github.com/sandstorm-io/sandstorm/issues/289
	gzip off;

	# Trust the sandstorm-http-bridge's X-Forwarded-Proto.
	map $http_x_forwarded_proto $fe_https {
		default "";
		https on;
	}

	server {
		listen 8000 default_server;
		listen [::]:8000 default_server ipv6only=on;

		# Allow arbitrarily large bodies - Sandstorm can handle them, and requests
		# are authenticated already, so there's no reason for apps to add additional
		# limits by default.
		client_max_body_size 0;

		server_name localhost;
		root /opt/app;
		location /static/ {
			alias /opt/app/static/;
		}
		location / {
			uwsgi_pass unix:///var/run/uwsgi.sock;
			uwsgi_param  QUERY_STRING       $query_string;
			uwsgi_param  REQUEST_METHOD     $request_method;
			uwsgi_param  CONTENT_TYPE       $content_type;
			uwsgi_param  CONTENT_LENGTH     $content_length;

			uwsgi_param  REQUEST_URI        $request_uri;
			uwsgi_param  PATH_INFO          $document_uri;
			uwsgi_param  DOCUMENT_ROOT      $document_root;
			uwsgi_param  SERVER_PROTOCOL    $server_protocol;
			uwsgi_param  HTTPS              $fe_https if_not_empty;

			uwsgi_param  REMOTE_ADDR        $remote_addr;
			uwsgi_param  REMOTE_PORT        $remote_port;
			uwsgi_param  SERVER_PORT        $server_port;
			uwsgi_param  SERVER_NAME        $server_name;
		}
	}
}
